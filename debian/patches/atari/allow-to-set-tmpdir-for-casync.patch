From: =?utf-8?q?Ga=C3=ABl_PORTAY?= <gael.portay@collabora.com>
Date: Mon, 22 Jul 2019 16:31:13 -0400
Subject: backport allow to set TMPDIR for casync

src/update_handler: allow to set TMPDIR for casync
backport of: https://github.com/rauc/rauc/commit/446214528c8d6bb502bb81cddc9b2325cc31efb1
---
 docs/reference.rst    |  8 ++++++++
 include/config_file.h |  1 +
 src/config_file.c     |  2 ++
 src/update_handler.c  | 19 +++++++++++++++----
 test/config_file.c    |  3 +++
 5 files changed, 29 insertions(+), 4 deletions(-)

diff --git a/docs/reference.rst b/docs/reference.rst
index 2fa09d0..d12a20c 100644
--- a/docs/reference.rst
+++ b/docs/reference.rst
@@ -145,6 +145,14 @@ For more information about using casync support of RAUC, refer to
   By default, the chunk store path is derived from the location of the RAUC
   bundle you install.
 
+``tmppath``
+  Allows to set the path to use as temporary directory for casync.
+  The temporary directory used by casync can be specified using the TMPDIR
+  environment variable. It falls back to /var/tmp if unset.
+  If ``tmppath`` is set then RAUC runs casync with TMPDIR sets to that path.
+  By default, the temporary directory is left unset by RAUC and casync uses its
+  internal default value ``/var/tmp``.
+
 **[autoinstall] section**
 
 The auto-install feature allows to configure a path that will be checked upon
diff --git a/include/config_file.h b/include/config_file.h
index 2abc1f1..6c54ca1 100644
--- a/include/config_file.h
+++ b/include/config_file.h
@@ -39,6 +39,7 @@ typedef struct {
 	/* path prefix where rauc may create mount directories */
 	gchar *mount_prefix;
 	gchar *store_path;
+	gchar *tmp_path;
 	gboolean activate_installed;
 	gchar *statusfile_path;
 	gchar *keyring_path;
diff --git a/src/config_file.c b/src/config_file.c
index 4a44c55..5acbd97 100644
--- a/src/config_file.c
+++ b/src/config_file.c
@@ -290,6 +290,7 @@ gboolean load_config(const gchar *filename, RaucConfig **config, GError **error)
 
 	/* parse [casync] section */
 	c->store_path = key_file_consume_string(key_file, "casync", "storepath", NULL);
+	c->tmp_path = key_file_consume_string(key_file, "casync", "tmppath", NULL);
 	if (!check_remaining_keys(key_file, "casync", &ierror)) {
 		g_propagate_error(error, ierror);
 		res = FALSE;
@@ -549,6 +550,7 @@ void free_config(RaucConfig *config)
 	g_free(config->system_bootloader);
 	g_free(config->mount_prefix);
 	g_free(config->store_path);
+	g_free(config->tmp_path);
 	g_free(config->grubenv_path);
 	g_free(config->statusfile_path);
 	g_free(config->keyring_path);
diff --git a/src/update_handler.c b/src/update_handler.c
index b8d044f..10e2e2f 100644
--- a/src/update_handler.c
+++ b/src/update_handler.c
@@ -164,8 +164,9 @@ static gboolean copy_raw_image(RaucImage *image, GUnixOutputStream *outstream, G
 	return TRUE;
 }
 
-static gboolean casync_extract(RaucImage *image, gchar *dest, const gchar *seed, const gchar *store, GError **error)
+static gboolean casync_extract(RaucImage *image, gchar *dest, const gchar *seed, const gchar *store, const gchar *tmpdir, GError **error)
 {
+	g_autoptr(GSubprocessLauncher) launcher = NULL;
 	g_autoptr(GSubprocess) sproc = NULL;
 	GError *ierror = NULL;
 	gboolean res = FALSE;
@@ -186,9 +187,13 @@ static gboolean casync_extract(RaucImage *image, gchar *dest, const gchar *seed,
 	g_ptr_array_add(args, g_strdup(dest));
 	g_ptr_array_add(args, NULL);
 
+	launcher = g_subprocess_launcher_new(G_SUBPROCESS_FLAGS_NONE);
+	if (tmpdir)
+		g_subprocess_launcher_setenv(launcher, "TMPDIR", tmpdir, TRUE);
+
 	r_debug_subprocess(args);
-	sproc = g_subprocess_newv((const gchar * const *)args->pdata,
-			G_SUBPROCESS_FLAGS_NONE, &ierror);
+	sproc = g_subprocess_launcher_spawnv(launcher,
+			(const gchar * const *)args->pdata, &ierror);
 	if (sproc == NULL) {
 		g_propagate_prefixed_error(
 				error,
@@ -237,6 +242,7 @@ static gboolean casync_extract_image(RaucImage *image, gchar *dest, GError **err
 	RaucSlot *seedslot = NULL;
 	g_autofree gchar *seed = NULL;
 	gchar *store = NULL;
+	gchar *tmpdir = NULL;
 	gboolean seed_mounted = FALSE;
 
 	/* Prepare Seed */
@@ -274,8 +280,13 @@ extract:
 	store = r_context()->install_info->mounted_bundle->storepath;
 	g_debug("Using store path: '%s'", store);
 
+	/* Set temporary directory */
+	tmpdir = r_context()->config->tmp_path;
+	if (tmpdir)
+		g_debug("Using tmp path: '%s'", tmpdir);
+
 	/* Call casync to extract */
-	res = casync_extract(image, dest, seed, store, &ierror);
+	res = casync_extract(image, dest, seed, store, tmpdir, &ierror);
 	if (!res) {
 		g_propagate_error(error, ierror);
 		goto out;
diff --git a/test/config_file.c b/test/config_file.c
index d16a9a1..ea479bd 100644
--- a/test/config_file.c
+++ b/test/config_file.c
@@ -61,6 +61,9 @@ max-bundle-download-size=42\n\
 [keyring]\n\
 path=/etc/rauc/keyring/\n\
 \n\
+[casync]\n\
+tmppath=/tmp/\n\
+\n\
 [slot.rescue.0]\n\
 description=Rescue partition\n\
 device=/dev/rescue-0\n\
